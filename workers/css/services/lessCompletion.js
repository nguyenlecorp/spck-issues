var __extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])};return function(n,t){function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();!function(e){if("object"==typeof module&&"object"==typeof module.exports){var n=e(require,exports);void 0!==n&&(module.exports=n)}else"function"==typeof define&&define.amd&&define(["require","exports","./cssCompletion","vscode-languageserver-types","vscode-nls"],e)}((function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=e("./cssCompletion"),o=e("vscode-languageserver-types"),r=e("vscode-nls").loadMessageBundle(),s=function(e){function n(){return e.call(this,"@")||this}return __extends(n,e),n.prototype.createFunctionProposals=function(e,n,t,r){for(var s=0,i=e;s<i.length;s++){var l=i[s],a={label:l.name,detail:l.example,documentation:l.description,textEdit:o.TextEdit.replace(this.getCompletionRange(n),l.name+"($0)"),insertTextFormat:o.InsertTextFormat.Snippet,kind:o.CompletionItemKind.Function};t&&(a.sortText="z"),r.items.push(a)}return r},n.prototype.getTermProposals=function(t,o,r){var s=n.builtInProposals;return t&&(s=s.filter((function(e){return!e.type||-1!==t.restrictions.indexOf(e.type)}))),this.createFunctionProposals(s,o,!0,r),e.prototype.getTermProposals.call(this,t,o,r)},n.prototype.getColorProposals=function(t,o,r){return this.createFunctionProposals(n.colorProposals,o,!1,r),e.prototype.getColorProposals.call(this,t,o,r)},n.prototype.getCompletionsForDeclarationProperty=function(n,t){return this.getCompletionsForSelector(null,!0,t),e.prototype.getCompletionsForDeclarationProperty.call(this,n,t)},n.builtInProposals=[{name:"escape",example:"escape(@string);",description:r("less.builtin.escape","URL encodes a string")},{name:"e",example:"e(@string);",description:r("less.builtin.e","escape string content")},{name:"replace",example:"replace(@string, @pattern, @replacement[, @flags]);",description:r("less.builtin.replace","string replace")},{name:"unit",example:"unit(@dimension, [@unit: '']);",description:r("less.builtin.unit","remove or change the unit of a dimension")},{name:"color",example:"color(@string);",description:r("less.builtin.color","parses a string to a color"),type:"color"},{name:"convert",example:"convert(@value, unit);",description:r("less.builtin.convert","converts numbers from one type into another")},{name:"data-uri",example:"data-uri([mimetype,] url);",description:r("less.builtin.data-uri","inlines a resource and falls back to `url()`"),type:"url"},{name:"length",example:"length(@list);",description:r("less.builtin.length","returns the number of elements in a value list")},{name:"extract",example:"extract(@list, index);",description:r("less.builtin.extract","returns a value at the specified position in the list")},{name:"abs",description:r("less.builtin.abs","absolute value of a number"),example:"abs(number);"},{name:"acos",description:r("less.builtin.acos","arccosine - inverse of cosine function"),example:"acos(number);"},{name:"asin",description:r("less.builtin.asin","arcsine - inverse of sine function"),example:"asin(number);"},{name:"ceil",example:"ceil(@number);",description:r("less.builtin.ceil","rounds up to an integer")},{name:"cos",description:r("less.builtin.cos","cosine function"),example:"cos(number);"},{name:"floor",description:r("less.builtin.floor","rounds down to an integer"),example:"floor(@number);"},{name:"percentage",description:r("less.builtin.percentage","converts to a %, e.g. 0.5 > 50%"),example:"percentage(@number);",type:"percentage"},{name:"round",description:r("less.builtin.round","rounds a number to a number of places"),example:"round(number, [places: 0]);"},{name:"sqrt",description:r("less.builtin.sqrt","calculates square root of a number"),example:"sqrt(number);"},{name:"sin",description:r("less.builtin.sin","sine function"),example:"sin(number);"},{name:"tan",description:r("less.builtin.tan","tangent function"),example:"tan(number);"},{name:"atan",description:r("less.builtin.atan","arctangent - inverse of tangent function"),example:"atan(number);"},{name:"pi",description:r("less.builtin.pi","returns pi"),example:"pi();"},{name:"pow",description:r("less.builtin.pow","first argument raised to the power of the second argument"),example:"pow(@base, @exponent);"},{name:"mod",description:r("less.builtin.mod","first argument modulus second argument"),example:"mod(number, number);"},{name:"min",description:r("less.builtin.min","returns the lowest of one or more values"),example:"min(@x, @y);"},{name:"max",description:r("less.builtin.max","returns the lowest of one or more values"),example:"max(@x, @y);"}],n.colorProposals=[{name:"argb",example:"argb(@color);",description:r("less.builtin.argb","creates a #AARRGGBB")},{name:"hsl",example:"hsl(@hue, @saturation, @lightness);",description:r("less.builtin.hsl","creates a color")},{name:"hsla",example:"hsla(@hue, @saturation, @lightness, @alpha);",description:r("less.builtin.hsla","creates a color")},{name:"hsv",example:"hsv(@hue, @saturation, @value);",description:r("less.builtin.hsv","creates a color")},{name:"hsva",example:"hsva(@hue, @saturation, @value, @alpha);",description:r("less.builtin.hsva","creates a color")},{name:"hue",example:"hue(@color);",description:r("less.builtin.hue","returns the `hue` channel of `@color` in the HSL space")},{name:"saturation",example:"saturation(@color);",description:r("less.builtin.saturation","returns the `saturation` channel of `@color` in the HSL space")},{name:"lightness",example:"lightness(@color);",description:r("less.builtin.lightness","returns the `lightness` channel of `@color` in the HSL space")},{name:"hsvhue",example:"hsvhue(@color);",description:r("less.builtin.hsvhue","returns the `hue` channel of `@color` in the HSV space")},{name:"hsvsaturation",example:"hsvsaturation(@color);",description:r("less.builtin.hsvsaturation","returns the `saturation` channel of `@color` in the HSV space")},{name:"hsvvalue",example:"hsvvalue(@color);",description:r("less.builtin.hsvvalue","returns the `value` channel of `@color` in the HSV space")},{name:"red",example:"red(@color);",description:r("less.builtin.red","returns the `red` channel of `@color`")},{name:"green",example:"green(@color);",description:r("less.builtin.green","returns the `green` channel of `@color`")},{name:"blue",example:"blue(@color);",description:r("less.builtin.blue","returns the `blue` channel of `@color`")},{name:"alpha",example:"alpha(@color);",description:r("less.builtin.alpha","returns the `alpha` channel of `@color`")},{name:"luma",example:"luma(@color);",description:r("less.builtin.luma","returns the `luma` value (perceptual brightness) of `@color`")},{name:"saturate",example:"saturate(@color, 10%);",description:r("less.builtin.saturate","return `@color` 10% points more saturated")},{name:"desaturate",example:"desaturate(@color, 10%);",description:r("less.builtin.desaturate","return `@color` 10% points less saturated")},{name:"lighten",example:"lighten(@color, 10%);",description:r("less.builtin.lighten","return `@color` 10% points lighter")},{name:"darken",example:"darken(@color, 10%);",description:r("less.builtin.darken","return `@color` 10% points darker")},{name:"fadein",example:"fadein(@color, 10%);",description:r("less.builtin.fadein","return `@color` 10% points less transparent")},{name:"fadeout",example:"fadeout(@color, 10%);",description:r("less.builtin.fadeout","return `@color` 10% points more transparent")},{name:"fade",example:"fade(@color, 50%);",description:r("less.builtin.fade","return `@color` with 50% transparency")},{name:"spin",example:"spin(@color, 10);",description:r("less.builtin.spin","return `@color` with a 10 degree larger in hue")},{name:"mix",example:"mix(@color1, @color2, [@weight: 50%]);",description:r("less.builtin.mix","return a mix of `@color1` and `@color2`")},{name:"greyscale",example:"greyscale(@color);",description:r("less.builtin.greyscale","returns a grey, 100% desaturated color")},{name:"contrast",example:"contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);",description:r("less.builtin.contrast","return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes")},{name:"multiply",example:"multiply(@color1, @color2);"},{name:"screen",example:"screen(@color1, @color2);"},{name:"overlay",example:"overlay(@color1, @color2);"},{name:"softlight",example:"softlight(@color1, @color2);"},{name:"hardlight",example:"hardlight(@color1, @color2);"},{name:"difference",example:"difference(@color1, @color2);"},{name:"exclusion",example:"exclusion(@color1, @color2);"},{name:"average",example:"average(@color1, @color2);"},{name:"negation",example:"negation(@color1, @color2);"}],n}(t.CSSCompletion);n.LESSCompletion=s}));